package it.gftblues.sixdofarm.ui;

/**
 * Copyright 2020 Gabriele Tafuro
 * 
 * This file is part of Pierin-oh!.
 *
 * Pierin-oh! is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 *  Pierin-oh! is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

import it.gftblues.sixdofarm.PierinhoCommand;
import it.gftblues.sixdofarm.SixDOFArmController;
import static it.gftblues.sixdofarm.ui.SixDOFArmControllerGUI.getDouble;
import java.awt.Color;
import java.net.URL;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.JSlider;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import it.gftblues.sixdofarm.SixDOFArmControllerInterface;
import it.gftblues.sixdofarm.joints.Clamp;
import it.gftblues.sixdofarm.joints.Elbow;
import it.gftblues.sixdofarm.joints.Joint;
import it.gftblues.sixdofarm.joints.Shoulder;
import it.gftblues.sixdofarm.joints.Wrist;
import java.util.Map;

/**
 * Arm controller tab of the {@code SixDOFArmControllerGUI}.
 * 
 * @author Gabriele Tafuro
 *
 * @since 1.0
 */
public class SixDOFArmControlTab
        extends javax.swing.JPanel
        implements ChangeListener{

  private static final String ARM_BACKGROUND_IMAGE =
          "/it/gftblues/sixdofarm/arm.jpg";

  final private SixDOFArmControllerInterface armController;

  private int shoulderVerPrev;
  private int elbowVerPrev;
  private int wristVerPrev;

  private NumberFormat numFormat;

  private boolean errorCorrection = false;

  /**
   * Creates new form JointTableControlPanel
   * @param ac
   *        The reference to the object that implements a 
   *        {@code SixDOFArmControllerInterface} interface.
   */
  public SixDOFArmControlTab(SixDOFArmControllerInterface ac) {
    armController = ac;
    preInitializing();
    initComponents();
    postInitializing();
  }
  
  private void preInitializing() {
    numFormat = DecimalFormat.getInstance();
    numFormat.setMaximumFractionDigits(3);
  }

  private void postInitializing() {
    Map<String, Joint> joints = SixDOFArmController.getJoints();
    Map<String, PierinhoCommand> map;
    Joint current;
    PierinhoCommand pc;
 
    current = joints.get("shoulder");
    if (current != null) {
      map = current.getCommands();
  
      pc = map.get(Shoulder.ACTION_SV);
      shoulderVerSlider.setMinimum(pc.getMin());
      shoulderVerSlider.setMaximum(pc.getMax());
      shoulderVerSlider.setValue(0);

      pc = map.get(Shoulder.ACTION_SH);
      shoulderHorSlider.setMinimum(pc.getMin());
      shoulderHorSlider.setMaximum(pc.getMax());
      shoulderHorSlider.setValue(0);
    }
 
    current = joints.get("elbow");
    if (current != null) {
      map = current.getCommands();
  
      pc = map.get(Elbow.ACTION_EV);
      elbowVerSlider.setMinimum(pc.getMin());
      elbowVerSlider.setMaximum(pc.getMax());
      elbowVerSlider.setValue(0);
    }
 
    current = joints.get("wrist");
    if (current != null) {
      map = current.getCommands();
  
      pc = map.get(Wrist.ACTION_WV);
      wristVerSlider.setMinimum(pc.getMin());
      wristVerSlider.setMaximum(pc.getMax());
      wristVerSlider.setValue(0);

      pc = map.get(Wrist.ACTION_WR);
      wristRotationSlider.setMinimum(pc.getMin());
      wristRotationSlider.setMaximum(pc.getMax());
      wristRotationSlider.setValue(0);
    }
 
    current = joints.get("clamp");
    if (current != null) {
      map = current.getCommands();
  
      pc = map.get(Clamp.ACTION_CS);
      clampSlider.setMinimum(pc.getMin());
      clampSlider.setMaximum(pc.getMax());
      clampSlider.setValue((pc.getMin()+pc.getMax())/2);
    }
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    innerPanel = new javax.swing.JPanel();
    clampPane = new javax.swing.JPanel();
    clampOpenBtn = new javax.swing.JButton();
    clampSlider = new javax.swing.JSlider(20, 90, 55);
    clampCloseBtn = new javax.swing.JButton();
    wristPanel = new javax.swing.JPanel();
    wristVerticalPanel = new javax.swing.JPanel();
    wristAllBackwardBtn = new javax.swing.JButton();
    wristVerSlider = new javax.swing.JSlider(-90, 90, 0);
    wristAllForewardBtn = new javax.swing.JButton();
    wristMiddleBtn = new javax.swing.JButton();
    wristRotationPanel = new javax.swing.JPanel();
    wristRotateAllLeftBtn = new javax.swing.JButton();
    wristRotationSlider = new javax.swing.JSlider(-90, 90, 0);
    wristRotateAllRightBtn = new javax.swing.JButton();
    wristRotateCenterBtn = new javax.swing.JButton();
    elbowPanel = new javax.swing.JPanel();
    elbowVerticalPanel = new javax.swing.JPanel();
    elbowAllBackwardBrn = new javax.swing.JButton();
    elbowVerSlider = new javax.swing.JSlider(-90, 90, 0);
    elbowAllForewardBtn = new javax.swing.JButton();
    elbowMiddleBtn = new javax.swing.JButton();
    shoulderPanel = new javax.swing.JPanel();
    shoulderHorPanel = new javax.swing.JPanel();
    shoulderAllLeftBtn = new javax.swing.JButton();
    shoulderHorSlider = new javax.swing.JSlider(-90, 90, 0);
    shoulderAllRightBtn = new javax.swing.JButton();
    shoulderCenterBtn = new javax.swing.JButton();
    shoulderVerPanel = new javax.swing.JPanel();
    shoulderAllBackwardBtn = new javax.swing.JButton();
    shoulderVerSlider = new javax.swing.JSlider(-90, 90, 0);
    shoulderAllForewardBtn = new javax.swing.JButton();
    shoulderMiddleBtn = new javax.swing.JButton();
    armPanel = getArmPanel();
    clampHeightPanel = new javax.swing.JPanel();
    clampHeight = new javax.swing.JFormattedTextField(numFormat);
    clampHeightLabel = new javax.swing.JLabel();
    elbowHeightPanel = new javax.swing.JPanel();
    elbowHeight = new javax.swing.JFormattedTextField(numFormat);
    elbowHeightLabel = new javax.swing.JLabel();
    shoulderHeightPanel = new javax.swing.JPanel();
    shoulderHeight = new javax.swing.JFormattedTextField(numFormat);
    shoulderHeightLabel = new javax.swing.JLabel();
    baseHeightPanel = new javax.swing.JPanel();
    baseHeight = new javax.swing.JFormattedTextField(numFormat);
    baseHeightLabel = new javax.swing.JLabel();

    setMaximumSize(new java.awt.Dimension(530, 460));
    setMinimumSize(new java.awt.Dimension(530, 460));
    setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    innerPanel.setMaximumSize(new java.awt.Dimension(525, 460));
    innerPanel.setMinimumSize(new java.awt.Dimension(525, 460));
    innerPanel.setPreferredSize(new java.awt.Dimension(525, 460));
    innerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("it/gftblues/sixdofarm/SixDOFArm"); // NOI18N
    clampPane.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("TAB_CONTROL_PANEL_CLAMP_PANEL"))); // NOI18N
    clampPane.setMaximumSize(new java.awt.Dimension(360, 64));
    clampPane.setMinimumSize(new java.awt.Dimension(360, 64));
    clampPane.setPreferredSize(new java.awt.Dimension(360, 64));

    clampOpenBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/it/gftblues/sixdofarm/clamp.png"))); // NOI18N
    clampOpenBtn.setToolTipText(bundle.getString("TAB_CONTROL_PANEL_CLAMP_OPEN")); // NOI18N
    clampOpenBtn.setMaximumSize(new java.awt.Dimension(40, 40));
    clampOpenBtn.setMinimumSize(new java.awt.Dimension(40, 40));
    clampOpenBtn.setPreferredSize(new java.awt.Dimension(40, 40));
    clampOpenBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        clampOpenBtnActionPerformed(evt);
      }
    });

    clampCloseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/it/gftblues/sixdofarm/clamp-closed.png"))); // NOI18N
    clampCloseBtn.setToolTipText(bundle.getString("TAB_CONTROL_PANEL_CLAMP_CLOSE")); // NOI18N
    clampCloseBtn.setMaximumSize(new java.awt.Dimension(40, 40));
    clampCloseBtn.setMinimumSize(new java.awt.Dimension(40, 40));
    clampCloseBtn.setPreferredSize(new java.awt.Dimension(40, 40));
    clampCloseBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        clampCloseBtnActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout clampPaneLayout = new javax.swing.GroupLayout(clampPane);
    clampPane.setLayout(clampPaneLayout);
    clampPaneLayout.setHorizontalGroup(
      clampPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(clampPaneLayout.createSequentialGroup()
        .addComponent(clampOpenBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(6, 6, 6)
        .addComponent(clampSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(6, 6, 6)
        .addComponent(clampCloseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    );
    clampPaneLayout.setVerticalGroup(
      clampPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(clampOpenBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
      .addComponent(clampCloseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
      .addComponent(clampSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
    );

    innerPanel.add(clampPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 5, -1, -1));

    wristPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("TAB_CONTROL_PANEL_WRIST"))); // NOI18N
    wristPanel.setMaximumSize(new java.awt.Dimension(360, 120));
    wristPanel.setMinimumSize(new java.awt.Dimension(360, 120));

    wristAllBackwardBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/it/gftblues/sixdofarm/left.png"))); // NOI18N
    wristAllBackwardBtn.setToolTipText(bundle.getString("TAB_CONTROL_PANEL_WRIST_BACKWARD")); // NOI18N
    wristAllBackwardBtn.setMaximumSize(new java.awt.Dimension(40, 40));
    wristAllBackwardBtn.setMinimumSize(new java.awt.Dimension(40, 40));
    wristAllBackwardBtn.setPreferredSize(new java.awt.Dimension(40, 40));
    wristAllBackwardBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        wristAllBackwardBtnActionPerformed(evt);
      }
    });

    wristAllForewardBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/it/gftblues/sixdofarm/right.png"))); // NOI18N
    wristAllForewardBtn.setToolTipText(bundle.getString("TAB_CONTROL_PANEL_WRIST_FOREWARD")); // NOI18N
    wristAllForewardBtn.setMaximumSize(new java.awt.Dimension(40, 40));
    wristAllForewardBtn.setMinimumSize(new java.awt.Dimension(40, 40));
    wristAllForewardBtn.setPreferredSize(new java.awt.Dimension(40, 40));
    wristAllForewardBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        wristAllForewardBtnActionPerformed(evt);
      }
    });

    wristMiddleBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/it/gftblues/sixdofarm/middle.png"))); // NOI18N
    wristMiddleBtn.setToolTipText(bundle.getString("TAB_CONTROL_PANEL_WRIST_MIDDLE")); // NOI18N
    wristMiddleBtn.setMaximumSize(new java.awt.Dimension(40, 40));
    wristMiddleBtn.setMinimumSize(new java.awt.Dimension(40, 40));
    wristMiddleBtn.setPreferredSize(new java.awt.Dimension(40, 40));
    wristMiddleBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        wristMiddleBtnActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout wristVerticalPanelLayout = new javax.swing.GroupLayout(wristVerticalPanel);
    wristVerticalPanel.setLayout(wristVerticalPanelLayout);
    wristVerticalPanelLayout.setHorizontalGroup(
      wristVerticalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, wristVerticalPanelLayout.createSequentialGroup()
        .addComponent(wristAllBackwardBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(wristVerSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(wristAllForewardBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(wristMiddleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(0, 2, Short.MAX_VALUE))
    );
    wristVerticalPanelLayout.setVerticalGroup(
      wristVerticalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(wristVerticalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
        .addComponent(wristAllBackwardBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(wristVerSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(wristAllForewardBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(wristMiddleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    wristRotateAllLeftBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/it/gftblues/sixdofarm/counterclockwise.png"))); // NOI18N
    wristRotateAllLeftBtn.setToolTipText(bundle.getString("TAB_CONTROL_PANEL_WRIST_ROTATE_COUNTERCLOCKWISE")); // NOI18N
    wristRotateAllLeftBtn.setMaximumSize(new java.awt.Dimension(40, 40));
    wristRotateAllLeftBtn.setMinimumSize(new java.awt.Dimension(40, 40));
    wristRotateAllLeftBtn.setPreferredSize(new java.awt.Dimension(40, 40));
    wristRotateAllLeftBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        wristRotateAllLeftBtnActionPerformed(evt);
      }
    });

    wristRotateAllRightBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/it/gftblues/sixdofarm/clockwise.png"))); // NOI18N
    wristRotateAllRightBtn.setToolTipText(bundle.getString("TAB_CONTROL_PANEL_WRIST_ROTATE_CLOCKWISE")); // NOI18N
    wristRotateAllRightBtn.setMaximumSize(new java.awt.Dimension(40, 40));
    wristRotateAllRightBtn.setMinimumSize(new java.awt.Dimension(40, 40));
    wristRotateAllRightBtn.setPreferredSize(new java.awt.Dimension(40, 40));
    wristRotateAllRightBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        wristRotateAllRightBtnActionPerformed(evt);
      }
    });

    wristRotateCenterBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/it/gftblues/sixdofarm/rotate-center.png"))); // NOI18N
    wristRotateCenterBtn.setToolTipText(bundle.getString("TAB_CONTROL_PANEL_WRIST_ROTATE_MIDDLE")); // NOI18N
    wristRotateCenterBtn.setMaximumSize(new java.awt.Dimension(40, 40));
    wristRotateCenterBtn.setMinimumSize(new java.awt.Dimension(40, 40));
    wristRotateCenterBtn.setPreferredSize(new java.awt.Dimension(40, 40));
    wristRotateCenterBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        wristRotateCenterBtnActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout wristRotationPanelLayout = new javax.swing.GroupLayout(wristRotationPanel);
    wristRotationPanel.setLayout(wristRotationPanelLayout);
    wristRotationPanelLayout.setHorizontalGroup(
      wristRotationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, wristRotationPanelLayout.createSequentialGroup()
        .addComponent(wristRotateAllLeftBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(wristRotationSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(wristRotateAllRightBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(wristRotateCenterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(0, 2, Short.MAX_VALUE))
    );
    wristRotationPanelLayout.setVerticalGroup(
      wristRotationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(wristRotationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
        .addComponent(wristRotateAllLeftBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(wristRotationSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(wristRotateAllRightBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(wristRotateCenterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    javax.swing.GroupLayout wristPanelLayout = new javax.swing.GroupLayout(wristPanel);
    wristPanel.setLayout(wristPanelLayout);
    wristPanelLayout.setHorizontalGroup(
      wristPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(wristVerticalPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
      .addComponent(wristRotationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
    );
    wristPanelLayout.setVerticalGroup(
      wristPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(wristPanelLayout.createSequentialGroup()
        .addComponent(wristVerticalPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(wristRotationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    innerPanel.add(wristPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 92, -1, -1));

    elbowPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("TAB_CONTROL_PANEL_ELBOW"))); // NOI18N
    elbowPanel.setMaximumSize(new java.awt.Dimension(360, 64));
    elbowPanel.setMinimumSize(new java.awt.Dimension(360, 64));
    elbowPanel.setPreferredSize(new java.awt.Dimension(360, 64));

    elbowAllBackwardBrn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/it/gftblues/sixdofarm/left.png"))); // NOI18N
    elbowAllBackwardBrn.setToolTipText(bundle.getString("TAB_CONTROL_PANEL_ELBOW_BACKWARD")); // NOI18N
    elbowAllBackwardBrn.setMaximumSize(new java.awt.Dimension(40, 40));
    elbowAllBackwardBrn.setMinimumSize(new java.awt.Dimension(40, 40));
    elbowAllBackwardBrn.setPreferredSize(new java.awt.Dimension(40, 40));
    elbowAllBackwardBrn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        elbowAllBackwardBrnActionPerformed(evt);
      }
    });

    elbowAllForewardBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/it/gftblues/sixdofarm/right.png"))); // NOI18N
    elbowAllForewardBtn.setToolTipText(bundle.getString("TAB_CONTROL_PANEL_ELBOW_FOREWARD")); // NOI18N
    elbowAllForewardBtn.setMaximumSize(new java.awt.Dimension(40, 40));
    elbowAllForewardBtn.setMinimumSize(new java.awt.Dimension(40, 40));
    elbowAllForewardBtn.setPreferredSize(new java.awt.Dimension(40, 40));
    elbowAllForewardBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        elbowAllForewardBtnActionPerformed(evt);
      }
    });

    elbowMiddleBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/it/gftblues/sixdofarm/middle.png"))); // NOI18N
    elbowMiddleBtn.setToolTipText(bundle.getString("TAB_CONTROL_PANEL_ELBOW_MIDDLE")); // NOI18N
    elbowMiddleBtn.setMaximumSize(new java.awt.Dimension(40, 40));
    elbowMiddleBtn.setMinimumSize(new java.awt.Dimension(40, 40));
    elbowMiddleBtn.setPreferredSize(new java.awt.Dimension(40, 40));
    elbowMiddleBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        elbowMiddleBtnActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout elbowVerticalPanelLayout = new javax.swing.GroupLayout(elbowVerticalPanel);
    elbowVerticalPanel.setLayout(elbowVerticalPanelLayout);
    elbowVerticalPanelLayout.setHorizontalGroup(
      elbowVerticalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(elbowVerticalPanelLayout.createSequentialGroup()
        .addComponent(elbowAllBackwardBrn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(elbowVerSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(elbowAllForewardBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(elbowMiddleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
    );
    elbowVerticalPanelLayout.setVerticalGroup(
      elbowVerticalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(elbowVerticalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
        .addComponent(elbowAllBackwardBrn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(elbowAllForewardBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(elbowMiddleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
      .addComponent(elbowVerSlider, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
    );

    javax.swing.GroupLayout elbowPanelLayout = new javax.swing.GroupLayout(elbowPanel);
    elbowPanel.setLayout(elbowPanelLayout);
    elbowPanelLayout.setHorizontalGroup(
      elbowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(elbowVerticalPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
    );
    elbowPanelLayout.setVerticalGroup(
      elbowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(elbowVerticalPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
    );

    innerPanel.add(elbowPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 237, -1, -1));

    shoulderPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("TAB_CONTROL_PANEL_SHOULDER"))); // NOI18N
    shoulderPanel.setMaximumSize(new java.awt.Dimension(360, 128));
    shoulderPanel.setMinimumSize(new java.awt.Dimension(360, 128));
    shoulderPanel.setPreferredSize(new java.awt.Dimension(360, 128));

    shoulderAllLeftBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/it/gftblues/sixdofarm/left.png"))); // NOI18N
    shoulderAllLeftBtn.setToolTipText(bundle.getString("TAB_CONTROL_PANEL_SHOULDER_LEFT")); // NOI18N
    shoulderAllLeftBtn.setMaximumSize(new java.awt.Dimension(40, 40));
    shoulderAllLeftBtn.setMinimumSize(new java.awt.Dimension(40, 40));
    shoulderAllLeftBtn.setPreferredSize(new java.awt.Dimension(40, 40));
    shoulderAllLeftBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        shoulderAllLeftBtnActionPerformed(evt);
      }
    });

    shoulderAllRightBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/it/gftblues/sixdofarm/right.png"))); // NOI18N
    shoulderAllRightBtn.setToolTipText(bundle.getString("TAB_CONTROL_PANEL_SHOULDER_RIGHT")); // NOI18N
    shoulderAllRightBtn.setMaximumSize(new java.awt.Dimension(40, 40));
    shoulderAllRightBtn.setMinimumSize(new java.awt.Dimension(40, 40));
    shoulderAllRightBtn.setPreferredSize(new java.awt.Dimension(40, 40));
    shoulderAllRightBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        shoulderAllRightBtnActionPerformed(evt);
      }
    });

    shoulderCenterBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/it/gftblues/sixdofarm/centre.png"))); // NOI18N
    shoulderCenterBtn.setToolTipText(bundle.getString("TAB_CONTROL_PANEL_SHOULDER_CENTER")); // NOI18N
    shoulderCenterBtn.setMaximumSize(new java.awt.Dimension(40, 40));
    shoulderCenterBtn.setMinimumSize(new java.awt.Dimension(40, 40));
    shoulderCenterBtn.setPreferredSize(new java.awt.Dimension(40, 40));
    shoulderCenterBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        shoulderCenterBtnActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout shoulderHorPanelLayout = new javax.swing.GroupLayout(shoulderHorPanel);
    shoulderHorPanel.setLayout(shoulderHorPanelLayout);
    shoulderHorPanelLayout.setHorizontalGroup(
      shoulderHorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shoulderHorPanelLayout.createSequentialGroup()
        .addComponent(shoulderAllLeftBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(shoulderHorSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(shoulderAllRightBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(shoulderCenterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(0, 0, Short.MAX_VALUE))
    );
    shoulderHorPanelLayout.setVerticalGroup(
      shoulderHorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(shoulderHorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
        .addComponent(shoulderAllLeftBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(shoulderHorSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(shoulderAllRightBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(shoulderCenterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    shoulderAllBackwardBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/it/gftblues/sixdofarm/left.png"))); // NOI18N
    shoulderAllBackwardBtn.setToolTipText(bundle.getString("TAB_CONTROL_PANEL_SHOULDER_BACKWARD")); // NOI18N
    shoulderAllBackwardBtn.setMaximumSize(new java.awt.Dimension(40, 40));
    shoulderAllBackwardBtn.setMinimumSize(new java.awt.Dimension(40, 40));
    shoulderAllBackwardBtn.setPreferredSize(new java.awt.Dimension(40, 40));
    shoulderAllBackwardBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        shoulderAllBackwardBtnActionPerformed(evt);
      }
    });

    shoulderAllForewardBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/it/gftblues/sixdofarm/right.png"))); // NOI18N
    shoulderAllForewardBtn.setToolTipText(bundle.getString("TAB_CONTROL_PANEL_SHOULDER_FOREWARD")); // NOI18N
    shoulderAllForewardBtn.setMaximumSize(new java.awt.Dimension(40, 40));
    shoulderAllForewardBtn.setMinimumSize(new java.awt.Dimension(40, 40));
    shoulderAllForewardBtn.setPreferredSize(new java.awt.Dimension(40, 40));
    shoulderAllForewardBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        shoulderAllForewardBtnActionPerformed(evt);
      }
    });

    shoulderMiddleBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/it/gftblues/sixdofarm/middle.png"))); // NOI18N
    shoulderMiddleBtn.setToolTipText(bundle.getString("TAB_CONTROL_PANEL_SHOULDER_UPRIGHT")); // NOI18N
    shoulderMiddleBtn.setMaximumSize(new java.awt.Dimension(40, 40));
    shoulderMiddleBtn.setMinimumSize(new java.awt.Dimension(40, 40));
    shoulderMiddleBtn.setPreferredSize(new java.awt.Dimension(40, 40));
    shoulderMiddleBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        shoulderMiddleBtnActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout shoulderVerPanelLayout = new javax.swing.GroupLayout(shoulderVerPanel);
    shoulderVerPanel.setLayout(shoulderVerPanelLayout);
    shoulderVerPanelLayout.setHorizontalGroup(
      shoulderVerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shoulderVerPanelLayout.createSequentialGroup()
        .addComponent(shoulderAllBackwardBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(shoulderVerSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(shoulderAllForewardBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(shoulderMiddleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(0, 0, Short.MAX_VALUE))
    );
    shoulderVerPanelLayout.setVerticalGroup(
      shoulderVerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(shoulderVerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
        .addComponent(shoulderAllBackwardBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(shoulderVerSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(shoulderAllForewardBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(shoulderMiddleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    javax.swing.GroupLayout shoulderPanelLayout = new javax.swing.GroupLayout(shoulderPanel);
    shoulderPanel.setLayout(shoulderPanelLayout);
    shoulderPanelLayout.setHorizontalGroup(
      shoulderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(shoulderHorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
      .addComponent(shoulderVerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
    );
    shoulderPanelLayout.setVerticalGroup(
      shoulderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(shoulderPanelLayout.createSequentialGroup()
        .addComponent(shoulderHorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(shoulderVerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    innerPanel.add(shoulderPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 327, -1, -1));

    armPanel.setBackground(new java.awt.Color(255, 255, 255));
    armPanel.setMaximumSize(new java.awt.Dimension(150, 450));
    armPanel.setMinimumSize(new java.awt.Dimension(150, 450));
    armPanel.setPreferredSize(new java.awt.Dimension(150, 450));
    armPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    clampHeightPanel.setOpaque(false);
    clampHeightPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    clampHeight.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    clampHeight.setToolTipText(bundle.getString("TAB_CONTROL_PANEL_HEIGHT_CLAMP")); // NOI18N
    clampHeight.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
    clampHeight.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        clampHeightActionPerformed(evt);
      }
    });
    clampHeightPanel.add(clampHeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 60, -1));

    clampHeightLabel.setBackground(new java.awt.Color(255, 255, 255));
    clampHeightLabel.setText(bundle.getString("TAB_CONTROL_PANEL_UM")); // NOI18N
    clampHeightLabel.setInheritsPopupMenu(false);
    clampHeightLabel.setOpaque(true);
    clampHeightLabel.setPreferredSize(new java.awt.Dimension(9, 12));
    clampHeightLabel.setRequestFocusEnabled(false);
    clampHeightPanel.add(clampHeightLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 3, 13, 12));

    armPanel.add(clampHeightPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 75, 20));

    elbowHeightPanel.setOpaque(false);
    elbowHeightPanel.setPreferredSize(new java.awt.Dimension(83, 20));
    elbowHeightPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    elbowHeight.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    elbowHeight.setToolTipText(bundle.getString("TAB_CONTROL_PANEL_HEIGHT_WRIST")); // NOI18N
    elbowHeight.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        elbowHeightActionPerformed(evt);
      }
    });
    elbowHeightPanel.add(elbowHeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 60, -1));

    elbowHeightLabel.setBackground(new java.awt.Color(255, 255, 255));
    elbowHeightLabel.setText(bundle.getString("TAB_CONTROL_PANEL_UM")); // NOI18N
    elbowHeightLabel.setInheritsPopupMenu(false);
    elbowHeightLabel.setOpaque(true);
    elbowHeightLabel.setPreferredSize(new java.awt.Dimension(9, 12));
    elbowHeightLabel.setRequestFocusEnabled(false);
    elbowHeightPanel.add(elbowHeightLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 3, 13, 12));

    armPanel.add(elbowHeightPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 170, 75, 20));

    shoulderHeightPanel.setOpaque(false);
    shoulderHeightPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    shoulderHeight.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    shoulderHeight.setToolTipText(bundle.getString("TAB_CONTROL_PANEL_HEIGHT_ELBOW")); // NOI18N
    shoulderHeight.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        shoulderHeightActionPerformed(evt);
      }
    });
    shoulderHeightPanel.add(shoulderHeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 60, -1));

    shoulderHeightLabel.setBackground(new java.awt.Color(255, 255, 255));
    shoulderHeightLabel.setText(bundle.getString("TAB_CONTROL_PANEL_UM")); // NOI18N
    shoulderHeightLabel.setInheritsPopupMenu(false);
    shoulderHeightLabel.setOpaque(true);
    shoulderHeightLabel.setPreferredSize(new java.awt.Dimension(9, 12));
    shoulderHeightLabel.setRequestFocusEnabled(false);
    shoulderHeightPanel.add(shoulderHeightLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 3, 13, 12));

    armPanel.add(shoulderHeightPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, 75, 20));

    baseHeightPanel.setOpaque(false);
    baseHeightPanel.setPreferredSize(new java.awt.Dimension(83, 20));
    baseHeightPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    baseHeight.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
    baseHeight.setToolTipText(bundle.getString("TAB_CONTROL_PANEL_HEIGHT_SHOULDER")); // NOI18N
    baseHeight.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        baseHeightActionPerformed(evt);
      }
    });
    baseHeightPanel.add(baseHeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 60, -1));

    baseHeightLabel.setBackground(new java.awt.Color(255, 255, 255));
    baseHeightLabel.setText(bundle.getString("TAB_CONTROL_PANEL_UM")); // NOI18N
    baseHeightLabel.setInheritsPopupMenu(false);
    baseHeightLabel.setOpaque(true);
    baseHeightLabel.setPreferredSize(new java.awt.Dimension(9, 12));
    baseHeightLabel.setRequestFocusEnabled(false);
    baseHeightPanel.add(baseHeightLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 3, 13, 12));

    armPanel.add(baseHeightPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 360, 75, 20));

    innerPanel.add(armPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 5, -1, -1));

    add(innerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
  }// </editor-fold>//GEN-END:initComponents

  private void clampOpenBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clampOpenBtnActionPerformed
    clampSlider.setValue(20);
    //    pointer.closeClamp();
  }//GEN-LAST:event_clampOpenBtnActionPerformed

  private void clampCloseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clampCloseBtnActionPerformed
    clampSlider.setValue(90);
  }//GEN-LAST:event_clampCloseBtnActionPerformed

  private void wristAllBackwardBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wristAllBackwardBtnActionPerformed
    wristVerPrev = wristVerSlider.getValue();
    wristVerSlider.setValue(-90);
  }//GEN-LAST:event_wristAllBackwardBtnActionPerformed

  private void wristAllForewardBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wristAllForewardBtnActionPerformed
    wristVerPrev = wristVerSlider.getValue();
    wristVerSlider.setValue(90);
  }//GEN-LAST:event_wristAllForewardBtnActionPerformed

  private void wristMiddleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wristMiddleBtnActionPerformed
    wristVerPrev = wristVerSlider.getValue();
    wristVerSlider.setValue(0);
  }//GEN-LAST:event_wristMiddleBtnActionPerformed

  private void wristRotateAllLeftBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wristRotateAllLeftBtnActionPerformed
    armController.rotateWrist(-90);
    wristRotationSlider.setValue(-90);
  }//GEN-LAST:event_wristRotateAllLeftBtnActionPerformed

  private void wristRotateAllRightBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wristRotateAllRightBtnActionPerformed
    armController.rotateWrist(90);
    wristRotationSlider.setValue(90);
  }//GEN-LAST:event_wristRotateAllRightBtnActionPerformed

  private void wristRotateCenterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wristRotateCenterBtnActionPerformed
    armController.rotateWrist(0);
    wristRotationSlider.setValue(0);
  }//GEN-LAST:event_wristRotateCenterBtnActionPerformed

  private void elbowAllBackwardBrnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elbowAllBackwardBrnActionPerformed
    elbowVerPrev = elbowVerSlider.getValue();
    elbowVerSlider.setValue(-90);
  }//GEN-LAST:event_elbowAllBackwardBrnActionPerformed

  private void elbowAllForewardBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elbowAllForewardBtnActionPerformed
    elbowVerPrev = elbowVerSlider.getValue();
    elbowVerSlider.setValue(90);
  }//GEN-LAST:event_elbowAllForewardBtnActionPerformed

  private void elbowMiddleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elbowMiddleBtnActionPerformed
    elbowVerPrev = elbowVerSlider.getValue();
    elbowVerSlider.setValue(0);
  }//GEN-LAST:event_elbowMiddleBtnActionPerformed

  private void shoulderAllLeftBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shoulderAllLeftBtnActionPerformed
    shoulderHorSlider.setValue(-90);
  }//GEN-LAST:event_shoulderAllLeftBtnActionPerformed

  private void shoulderAllRightBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shoulderAllRightBtnActionPerformed
    shoulderHorSlider.setValue(90);
  }//GEN-LAST:event_shoulderAllRightBtnActionPerformed

  private void shoulderCenterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shoulderCenterBtnActionPerformed
    shoulderHorSlider.setValue(0);
  }//GEN-LAST:event_shoulderCenterBtnActionPerformed

  private void shoulderAllBackwardBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shoulderAllBackwardBtnActionPerformed
    shoulderVerPrev = shoulderVerSlider.getValue();
    shoulderVerSlider.setValue(-90);
  }//GEN-LAST:event_shoulderAllBackwardBtnActionPerformed

  private void shoulderAllForewardBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shoulderAllForewardBtnActionPerformed
    shoulderVerPrev = shoulderVerSlider.getValue();
    shoulderVerSlider.setValue(90);
  }//GEN-LAST:event_shoulderAllForewardBtnActionPerformed

  private void shoulderMiddleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shoulderMiddleBtnActionPerformed
    shoulderVerPrev = shoulderVerSlider.getValue();
    shoulderVerSlider.setValue(0);
  }//GEN-LAST:event_shoulderMiddleBtnActionPerformed

  private void clampHeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clampHeightActionPerformed
    armController.setClampLength(Double.parseDouble(clampHeight.getText()));
  }//GEN-LAST:event_clampHeightActionPerformed

  private void elbowHeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elbowHeightActionPerformed
    armController.setElbowLength(Double.parseDouble(elbowHeight.getText()));
  }//GEN-LAST:event_elbowHeightActionPerformed

  private void shoulderHeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shoulderHeightActionPerformed
    armController.setShoulderLength(Double.parseDouble(shoulderHeight.getText()));
  }//GEN-LAST:event_shoulderHeightActionPerformed

  private void baseHeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baseHeightActionPerformed
    armController.setBaseHeight(Double.parseDouble(baseHeight.getText()));
  }//GEN-LAST:event_baseHeightActionPerformed


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JPanel armPanel;
  private javax.swing.JFormattedTextField baseHeight;
  private javax.swing.JLabel baseHeightLabel;
  private javax.swing.JPanel baseHeightPanel;
  private javax.swing.JButton clampCloseBtn;
  private javax.swing.JFormattedTextField clampHeight;
  private javax.swing.JLabel clampHeightLabel;
  private javax.swing.JPanel clampHeightPanel;
  private javax.swing.JButton clampOpenBtn;
  private javax.swing.JPanel clampPane;
  private javax.swing.JSlider clampSlider;
  private javax.swing.JButton elbowAllBackwardBrn;
  private javax.swing.JButton elbowAllForewardBtn;
  private javax.swing.JFormattedTextField elbowHeight;
  private javax.swing.JLabel elbowHeightLabel;
  private javax.swing.JPanel elbowHeightPanel;
  private javax.swing.JButton elbowMiddleBtn;
  private javax.swing.JPanel elbowPanel;
  private javax.swing.JSlider elbowVerSlider;
  private javax.swing.JPanel elbowVerticalPanel;
  private javax.swing.JPanel innerPanel;
  private javax.swing.JButton shoulderAllBackwardBtn;
  private javax.swing.JButton shoulderAllForewardBtn;
  private javax.swing.JButton shoulderAllLeftBtn;
  private javax.swing.JButton shoulderAllRightBtn;
  private javax.swing.JButton shoulderCenterBtn;
  private javax.swing.JFormattedTextField shoulderHeight;
  private javax.swing.JLabel shoulderHeightLabel;
  private javax.swing.JPanel shoulderHeightPanel;
  private javax.swing.JPanel shoulderHorPanel;
  private javax.swing.JSlider shoulderHorSlider;
  private javax.swing.JButton shoulderMiddleBtn;
  private javax.swing.JPanel shoulderPanel;
  private javax.swing.JPanel shoulderVerPanel;
  private javax.swing.JSlider shoulderVerSlider;
  private javax.swing.JButton wristAllBackwardBtn;
  private javax.swing.JButton wristAllForewardBtn;
  private javax.swing.JButton wristMiddleBtn;
  private javax.swing.JPanel wristPanel;
  private javax.swing.JButton wristRotateAllLeftBtn;
  private javax.swing.JButton wristRotateAllRightBtn;
  private javax.swing.JButton wristRotateCenterBtn;
  private javax.swing.JPanel wristRotationPanel;
  private javax.swing.JSlider wristRotationSlider;
  private javax.swing.JSlider wristVerSlider;
  private javax.swing.JPanel wristVerticalPanel;
  // End of variables declaration//GEN-END:variables

  private JPanel getArmPanel() {
    URL iconLocation = SixDOFArmControllerGUI.class.getResource(
            ARM_BACKGROUND_IMAGE
    );
    ImageIcon icon = new ImageIcon(iconLocation);
    JPanel panel = new JPanelWithBackground(icon.getImage());
    panel.setBackground(Color.GREEN);
    return panel;
  }

  public void setSliders() {
    setSlider(shoulderHorSlider, 30, 10);
    setSlider(shoulderVerSlider, 30, 10);
    setSlider(wristVerSlider, 30, 10);
    setSlider(wristRotationSlider, 30, 10);
    setSlider(elbowVerSlider, 30, 10);
    setSlider(clampSlider, 10, 10);
  }

  private void setSlider(
          JSlider slider, 
          int majorTickSpacing,
          int minorTickSpacing
  ) {
    slider.addChangeListener(this);
    slider.setMajorTickSpacing(majorTickSpacing);
    slider.setMinorTickSpacing(minorTickSpacing);
    slider.setPaintTicks(true);
    slider.setPaintLabels(true);
  }

  public void setShoulderVerticalPosition(int deg) {
    errorCorrection = true;
    shoulderVerSlider.setValue(deg);
    errorCorrection = false;
  }

  public void setElbowVerticalPosition(int deg) {
    errorCorrection = true;
    elbowVerSlider.setValue(deg);
    errorCorrection = false;
  }

  public void setWristVerticalPosition(int deg) {
    errorCorrection = true;
    wristVerSlider.setValue(deg);
    errorCorrection = false;
  }

  public void setWristRotationalPosition(int deg) {
    errorCorrection = true;
    this.wristRotationSlider.setValue(deg);
    errorCorrection = false;
  }

  public void setShoulderHorizontalPosition(int deg) {
    errorCorrection = true;
    shoulderHorSlider.setValue(deg);
    errorCorrection = false;
  }

  public void setClampAperturelPosition(int deg) {
    errorCorrection = true;
    clampSlider.setValue(deg);
    errorCorrection = false;
  }

  public void setClampLength(double len) {
    clampHeight.setValue(len);
  }

  public void setElbowLength(double len) {
    elbowHeight.setValue(getDouble(len));
  }

  public void setShoulderLength(double len) {
    shoulderHeight.setValue(getDouble(len));
  }

  public void setBaseHeight(double len) {
    baseHeight.setValue(getDouble(len));
  }

  @Override
  public void stateChanged(ChangeEvent e) {
    if (!errorCorrection) {
      int curr;
      Object source = e.getSource();
      if (source == clampSlider) {
        armController.setClamp(clampSlider.getValue());
      } else if (source == wristVerSlider) {
        curr = wristVerSlider.getValue();
        if (errorCorrection = !armController.moveWristVertically(curr)) {
          wristVerSlider.setValue(wristVerPrev);
          errorCorrection = false;
        } else {
          wristVerPrev = curr;
        }
      } else if (source == wristRotationSlider) {
        armController.rotateWrist(wristRotationSlider.getValue());
      } else if (source == elbowVerSlider) {
        curr = elbowVerSlider.getValue();
        if (errorCorrection = !armController.moveElbowVertically(curr)) {
          elbowVerSlider.setValue(elbowVerPrev);
          errorCorrection = false;
        } else {
          elbowVerPrev = curr;
        }
      } else if (source == shoulderVerSlider) {
        curr = shoulderVerSlider.getValue();
        if (errorCorrection = !armController.moveShoulderVertically(curr)) {
          shoulderVerSlider.setValue(shoulderVerPrev);
          errorCorrection = false;
        } else {
          shoulderVerPrev = curr;
        }
      } else if (source == shoulderHorSlider) {
        armController.moveShoulderHorizontally(shoulderHorSlider.getValue());
      }
    }
  }
}
