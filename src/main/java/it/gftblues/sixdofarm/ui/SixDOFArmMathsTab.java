package it.gftblues.sixdofarm.ui;

/**
 * Copyright 2020 Gabriele Tafuro
 * 
 * This file is part of Pierin-oh!.
 *
 * Pierin-oh! is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 *  Pierin-oh! is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.Document;
import it.gftblues.sixdofarm.SixDOFArmControllerInterface;

/**
 * Maths tab of the {@code SixDOFArmControllerGUI}.
 * 
 * @author Gabriele Tafuro
 *
 * @since 1.0
 */
public class SixDOFArmMathsTab extends javax.swing.JPanel {

  final private SixDOFArmControllerInterface armController;

  private JointTable shTable;
  private JointTable elTable;
  private JointTable wrTable;

  private JointTableModel shoulderTableModel;
  private JointTableModel elbowTableModel;
  private JointTableModel wristTableModel;
  
  /**
   * Creates new form SixDOFArmMathsTab
   * @param ac
   *        The reference to the object that implements a 
   *        {@code SixDOFArmControllerInterface} interface.
   */
  public SixDOFArmMathsTab(SixDOFArmControllerInterface ac) {
    armController = ac;
    preInitializing();
    initComponents();
    postInitializing();
  }

  private void preInitializing() {
    shTable = new JointTable();
    elTable = new JointTable();
    wrTable = new JointTable();
    shoulderTableModel = new JointTableModel();
    elbowTableModel = new JointTableModel();
    wristTableModel = new JointTableModel();
  }

  private void postInitializing() {
    shTable.setWidths();
    Document gravityDoc = gravity.getDocument();
    gravityDoc.addDocumentListener(new DocumentListener() {
      @Override
      public void insertUpdate(DocumentEvent e) {
        updateMathsTables();
      }

      @Override
      public void removeUpdate(DocumentEvent e) {
        updateMathsTables();
      }

      @Override
      public void changedUpdate(DocumentEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
      }
    });
    setTablesColumnWidths();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    innerPanel = new javax.swing.JPanel();
    shScrollTableLabel = new javax.swing.JLabel();
    shScrollTablePane = new javax.swing.JScrollPane();
    javax.swing.JTable shTable =  this.shTable;
    elScrollTableLabel = new javax.swing.JLabel();
    elScrollTablePane = new javax.swing.JScrollPane();
    javax.swing.JTable elTable = this.elTable;
    wrScrollTableLabel = new javax.swing.JLabel();
    wrScrollTablePane = new javax.swing.JScrollPane();
    javax.swing.JTable wrTable = this.wrTable;
    mathsDataPane = new javax.swing.JPanel();
    gravityLabel = new javax.swing.JLabel();
    gravityUnitLabel = new javax.swing.JLabel();
    maxweightLabel = new javax.swing.JLabel();
    maxweightValueLabel = new javax.swing.JLabel();
    maxweightUnitLabel = new javax.swing.JLabel();
    gravity = new javax.swing.JFormattedTextField();
    saveBtn = new javax.swing.JButton();

    java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("it/gftblues/sixdofarm/SixDOFArm"); // NOI18N
    shScrollTableLabel.setText(bundle.getString("TAB_MATHS_SHOULDER")); // NOI18N

    shScrollTablePane.setPreferredSize(new java.awt.Dimension(452, 302));

    shTable.setModel(shoulderTableModel);
    shTable.setIntercellSpacing(new java.awt.Dimension(5, 1));
    shTable.setMinimumSize(new java.awt.Dimension(0, 20));
    shScrollTablePane.setViewportView(shTable);

    elScrollTableLabel.setText(bundle.getString("TAB_MATHS_ELBOW")); // NOI18N

    elTable.setModel(elbowTableModel);
    elTable.setIntercellSpacing(new java.awt.Dimension(5, 1));
    elScrollTablePane.setViewportView(elTable);

    wrScrollTableLabel.setText(bundle.getString("TAB_MATHS_WRIST")); // NOI18N

    wrTable.setModel(wristTableModel);
    wrTable.setIntercellSpacing(new java.awt.Dimension(5, 1));
    wrScrollTablePane.setViewportView(wrTable);

    gravityLabel.setText(bundle.getString("TAB_MATHS_GRAVITY")); // NOI18N

    gravityUnitLabel.setText("<html>m/s<sup>2</sup></html>");

    maxweightLabel.setText(bundle.getString("TAB_MATHS_MAX_WEIGHT")); // NOI18N

    maxweightValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    maxweightValueLabel.setText("0.00");

    maxweightUnitLabel.setText(bundle.getString("TAB_MATHS_KG")); // NOI18N

    gravity.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
    gravity.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        gravityActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout mathsDataPaneLayout = new javax.swing.GroupLayout(mathsDataPane);
    mathsDataPane.setLayout(mathsDataPaneLayout);
    mathsDataPaneLayout.setHorizontalGroup(
      mathsDataPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(mathsDataPaneLayout.createSequentialGroup()
        .addComponent(gravityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(gravity, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(gravityUnitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(27, 27, 27)
        .addComponent(maxweightLabel)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(maxweightValueLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGap(27, 27, 27)
        .addComponent(maxweightUnitLabel))
    );
    mathsDataPaneLayout.setVerticalGroup(
      mathsDataPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(mathsDataPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
        .addComponent(gravityLabel)
        .addComponent(gravityUnitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(maxweightLabel)
        .addComponent(maxweightValueLabel)
        .addComponent(maxweightUnitLabel)
        .addComponent(gravity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    saveBtn.setText(bundle.getString("TAB_MATHS_SAVE")); // NOI18N
    saveBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        saveBtnActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout innerPanelLayout = new javax.swing.GroupLayout(innerPanel);
    innerPanel.setLayout(innerPanelLayout);
    innerPanelLayout.setHorizontalGroup(
      innerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(innerPanelLayout.createSequentialGroup()
        .addGap(10, 10, 10)
        .addComponent(mathsDataPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addContainerGap(80, Short.MAX_VALUE))
      .addGroup(innerPanelLayout.createSequentialGroup()
        .addGroup(innerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(innerPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(innerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(shScrollTableLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addComponent(shScrollTablePane, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
              .addComponent(elScrollTableLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
              .addComponent(elScrollTablePane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
              .addComponent(wrScrollTableLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
              .addComponent(wrScrollTablePane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
          .addGroup(innerPanelLayout.createSequentialGroup()
            .addGap(10, 10, 10)
            .addComponent(saveBtn)))
        .addContainerGap(72, Short.MAX_VALUE))
    );
    innerPanelLayout.setVerticalGroup(
      innerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(innerPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(shScrollTableLabel)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(shScrollTablePane, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(elScrollTableLabel)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(elScrollTablePane, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(wrScrollTableLabel)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(wrScrollTablePane, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(mathsDataPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(saveBtn)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(innerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(innerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
  }// </editor-fold>//GEN-END:initComponents

  private void gravityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gravityActionPerformed
    armController.setGravity(Double.parseDouble(gravity.getText()));
  }//GEN-LAST:event_gravityActionPerformed

  private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
    armController.setMathShoulder(
      shoulderTableModel.getMass(),
      shoulderTableModel.getLength(),
      shoulderTableModel.getTorque()
    );
    armController.setMathElbow(
      elbowTableModel.getMass(),
      elbowTableModel.getLength(),
      elbowTableModel.getTorque()
    );
    armController.setMathWrist(
      wristTableModel.getMass(),
      wristTableModel.getLength(),
      wristTableModel.getTorque()
    );
    armController.saveConfiguration();
  }//GEN-LAST:event_saveBtnActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel elScrollTableLabel;
  private javax.swing.JScrollPane elScrollTablePane;
  private javax.swing.JFormattedTextField gravity;
  private javax.swing.JLabel gravityLabel;
  private javax.swing.JLabel gravityUnitLabel;
  private javax.swing.JPanel innerPanel;
  private javax.swing.JPanel mathsDataPane;
  private javax.swing.JLabel maxweightLabel;
  private javax.swing.JLabel maxweightUnitLabel;
  private javax.swing.JLabel maxweightValueLabel;
  private javax.swing.JButton saveBtn;
  private javax.swing.JLabel shScrollTableLabel;
  private javax.swing.JScrollPane shScrollTablePane;
  private javax.swing.JLabel wrScrollTableLabel;
  private javax.swing.JScrollPane wrScrollTablePane;
  // End of variables declaration//GEN-END:variables

  private void updateMathsTables() {
    float data;
    try {
      data = Float.valueOf(gravity.getText());
    } catch (NumberFormatException nfe) {
      data = 0.0f;
    }
    if (shoulderTableModel != null) {
      shoulderTableModel.setGravity(data);
    }
    if (elbowTableModel != null) {
      elbowTableModel.setGravity(data);
    }
    if (wristTableModel != null) {
      wristTableModel.setGravity(data);
    }
  }

  public void setShoulderMaths(double mass, double length, double torque) {
    shoulderTableModel.setMass(mass);
    shoulderTableModel.setLength(length);
    shoulderTableModel.setTorque(torque);
  }

  public void setElbowMaths(double mass, double length, double torque) {
    elbowTableModel.setValueAt(mass, 0, 1);
    elbowTableModel.setValueAt(length, 1, 1);
    elbowTableModel.setValueAt(torque, 2, 2);
    elbowTableModel.calculate();
  }
  
  public void setWristMaths(double mass, double length, double torque) {
    wristTableModel.setValueAt(mass, 0, 1);
    wristTableModel.setValueAt(length, 1, 1);
    wristTableModel.setValueAt(torque, 2, 2);
    wristTableModel.calculate();
  }

  private void setTablesColumnWidths() {
    ((JointTable)shTable).setWidths();
    ((JointTable)elTable).setWidths();
    ((JointTable)wrTable).setWidths();
  }

  public void setGravity(double gravity) {
    this.gravity.setText(""+gravity);
  }
}
