package it.gftblues.sixdofarm.ui;

/**
 * Copyright 2020 Gabriele Tafuro
 * 
 * This file is part of Pierin-oh!.
 *
 * Pierin-oh! is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 *  Pierin-oh! is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

import it.gftblues.utils.FileUtils;
import it.gftblues.utils.ValidFilename;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import it.gftblues.sixdofarm.SixDOFArmControllerInterface;

/**
 * Face recognition tab of the {@code SixDOFArmControllerGUI}.
 * 
 * @author Gabriele Tafuro
 *
 * @since 1.0 */
public class SixDOFArmFaceRecognitionTab extends javax.swing.JPanel {
  private static final String NO_VIDEO_BACKGROUND =
          "/it/gftblues/sixdofarm/video-off.png";
  private static final String STOP_ICON = "/it/gftblues/sixdofarm/stop.png";
  private static final String PLAY_ICON = "/it/gftblues/sixdofarm/play.png";

  private static final int VIDEO_WIDTH = 515;
  private static final int VIDEO_HEIGHT = VIDEO_WIDTH*3/4;

  final private SixDOFArmControllerGUI gui;
  final private SixDOFArmControllerInterface armController;

  private boolean useFaceRecognition = false;

  /**
   * Creates new form SixDOFArmVideoTab
   * @param gui
   *        A reference to the {@code SixDOFArmControllerGUI} for sending 
   *        notifications (for instance for showing errors).
   * @param ac
   *        The reference to the object that implements a 
   *        {@code SixDOFArmControllerInterface} interface.
   */
  public SixDOFArmFaceRecognitionTab(
          SixDOFArmControllerGUI gui,
          SixDOFArmControllerInterface ac
  ) {
    this.gui = gui;
    armController = ac;
    preInitializing();
    initComponents();
    postInitializing();
  }

  private void preInitializing() {
  }

  private void postInitializing() {
    setPlayStopBtn();
    if (!useFaceRecognition) {
      videoHasStopped();
    }
    this.
    classifierFilename.getDocument().addDocumentListener(
            new DocumentListener() {
      @Override
      public void insertUpdate(DocumentEvent e) {
        enablePlayStopBtn();
      }

      @Override
      public void removeUpdate(DocumentEvent e) {
        enablePlayStopBtn();
      }

      @Override
      public void changedUpdate(DocumentEvent e) {
        enablePlayStopBtn();
      }
      
    });
  }

  private void enablePlayStopBtn() {
    if (!useFaceRecognition) {
      playStopBtn.setEnabled(((ValidFilename)classifierFilename).exists());
    }
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    innerTab = new javax.swing.JPanel();
    videoLabel = new javax.swing.JLabel();
    videoControlPanel = new javax.swing.JPanel();
    classifierFilenameLabel = new javax.swing.JLabel();
    classifierFilename = new ValidFilename();
    selectBtn = new javax.swing.JButton();
    playStopBtn = new javax.swing.JButton();

    innerTab.setMaximumSize(new java.awt.Dimension(535, 462));
    innerTab.setMinimumSize(new java.awt.Dimension(535, 462));
    innerTab.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    videoLabel.setMinimumSize(new java.awt.Dimension(160, 120));
    videoLabel.setPreferredSize(new java.awt.Dimension(VIDEO_WIDTH, VIDEO_HEIGHT));
    innerTab.add(videoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 515, -1));

    java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("it/gftblues/sixdofarm/SixDOFArm"); // NOI18N
    classifierFilenameLabel.setText(bundle.getString("TAB_VIDEO_CLASSIFIER")); // NOI18N

    selectBtn.setText(bundle.getString("TAB_VIDEO_SELECT_BTN")); // NOI18N
    selectBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        selectBtnActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout videoControlPanelLayout = new javax.swing.GroupLayout(videoControlPanel);
    videoControlPanel.setLayout(videoControlPanelLayout);
    videoControlPanelLayout.setHorizontalGroup(
      videoControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(videoControlPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(classifierFilenameLabel)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(classifierFilename, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(selectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );
    videoControlPanelLayout.setVerticalGroup(
      videoControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(videoControlPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(videoControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(classifierFilenameLabel)
          .addComponent(classifierFilename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(selectBtn))
        .addContainerGap())
    );

    innerTab.add(videoControlPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 411, -1, 40));

    playStopBtn.setMaximumSize(new java.awt.Dimension(40, 40));
    playStopBtn.setMinimumSize(new java.awt.Dimension(40, 40));
    playStopBtn.setPreferredSize(new java.awt.Dimension(40, 40));
    playStopBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        playStopBtnActionPerformed(evt);
      }
    });
    innerTab.add(playStopBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(485, 411, -1, -1));

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(innerTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(innerTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
  }// </editor-fold>//GEN-END:initComponents

  private void selectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectBtnActionPerformed
    FileNameExtensionFilter filter = new FileNameExtensionFilter(
      SixDOFArmResources.getString("CLASSIFIER_FILE_DESCRIPTION"),
      SixDOFArmResources.getString("CLASSIFIER_FILE_EXTENSION")
    );
    File file;
    File dir;
    final JFileChooser fc = new JFileChooser();
    fc.setDialogTitle(SixDOFArmResources.getString("CLASSIFIER_FILE_SELECTION"));
    fc.setFileFilter(filter);
    boolean proceed;

    String filename = classifierFilename.getText();
    if (filename != null) {
      dir = new File(FileUtils.expandFileName(filename));
      if (dir.exists()) {
        fc.setCurrentDirectory(dir);
      }
    }
    do {
      int returnVal = fc.showOpenDialog(this);
      if (returnVal == JFileChooser.APPROVE_OPTION) {
        file = fc.getSelectedFile();
        if (file.exists()) {
          proceed = true;
        } else {
          proceed = false;
          gui.showError(String.format(
            "ERROR_FILE_DOES_NOT_EXIST",
            file.getAbsolutePath()));
      }
      if (proceed) {
        classifierFilename.setText(file.getAbsolutePath());
        armController.setClassifierFilePath(file.getAbsolutePath());
      }
    } else {
      break;
    }
    } while(!proceed);
  }//GEN-LAST:event_selectBtnActionPerformed

  private void playStopBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playStopBtnActionPerformed
    useFaceRecognition = !useFaceRecognition;
    setPlayStopBtn();
    armController.useFaceRecognition(useFaceRecognition);
  }//GEN-LAST:event_playStopBtnActionPerformed


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextField classifierFilename;
  private javax.swing.JLabel classifierFilenameLabel;
  private javax.swing.JPanel innerTab;
  private javax.swing.JButton playStopBtn;
  private javax.swing.JButton selectBtn;
  private javax.swing.JPanel videoControlPanel;
  private javax.swing.JLabel videoLabel;
  // End of variables declaration//GEN-END:variables

  public void setVideoFrame(BufferedImage frame) {
    if (videoLabel != null) {
      Image outputImage = frame.getScaledInstance(
              VIDEO_WIDTH, 
              VIDEO_HEIGHT, 
              Image.SCALE_DEFAULT
      );
      ImageIcon image = new ImageIcon(outputImage);
      videoLabel.setIcon(image);
      videoLabel.repaint();
    }
  }

  public void videoHasStopped() {
    try {
      BufferedImage img = ImageIO.read(SixDOFArmControllerGUI.class.getResource(
              NO_VIDEO_BACKGROUND
      ));
      setVideoFrame(img);
    } catch (IOException ex) {
      Logger.getLogger(SixDOFArmControllerGUI.class.getName()).log(Level.SEVERE, null, ex);
    }
  }

  public boolean useFaceRecognition() {
    return useFaceRecognition;
  }

  public void setUseFaceRecognition(boolean use) {
    useFaceRecognition = use;
    setPlayStopBtn();
    armController.useFaceRecognition(useFaceRecognition);
  }

  public String getClassifierFilename() {
    if (classifierFilename != null) {
      return classifierFilename.getText();
    }
    return null;
  }

  public void setClassifierFilename(String classifierFilename) {
    if (classifierFilename != null) {
      this.classifierFilename.setText(classifierFilename);
    }
  }

  private void setPlayStopBtn() {
    if (playStopBtn != null) {
      java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle(
              "it/gftblues/sixdofarm/SixDOFArm"
      ); // NOI18N
      if (useFaceRecognition) {
        playStopBtn.setIcon(
                new ImageIcon(SixDOFArmControllerGUI.class.getResource(
                        STOP_ICON
                )));
        playStopBtn.setToolTipText(
                bundle.getString("TAB_VIDEO_STOP_BTN")
        );
      } else {
        enablePlayStopBtn();
        playStopBtn.setIcon(
                new ImageIcon(SixDOFArmControllerGUI.class.getResource(
                        PLAY_ICON
                )));
        playStopBtn.setToolTipText(bundle.getString("TAB_VIDEO_PLAY_BTN"));
      }
    }
  }
}
